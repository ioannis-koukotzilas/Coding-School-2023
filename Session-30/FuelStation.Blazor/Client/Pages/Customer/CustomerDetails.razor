@using FuelStation.Blazor.Shared.DTOs.Customer

@page "/customer/details/{Id:int?}"

@inject HttpClient Http
@inject NavigationManager navigationManager

@if (Customer == null)
{
    <Spinner />
}
else
{
    <PageTitle>Customer: @Customer.Name @Customer.Surname - Fuel Station</PageTitle>
    <h2 class="mb-5">Details for customer: @Customer.Name @Customer.Surname</h2>

    <div class="row mb-5">
        <div class="col-md-6">
            <ul class="list-group">
                <li class="list-group-item list-group-item-dark"><strong>Customer ID:</strong> @Customer.Id</li>
                <li class="list-group-item list-group-item-dark"><strong>Card number:</strong> @Customer.CardNumber</li>
            </ul>
        </div>
    </div>

    <div class="btn-group mb-5" role="group" aria-label="Actions">
        <button class="btn btn-secondary" @onclick="Cancel">Back</button>
        <button class="btn btn-primary" @onclick="Edit">Edit Customer</button>
    </div>

    @if (Customer.Transactions.Any())
    {
        <h3 class="mb-3">Transactions</h3>

        <div class="table-responsive p-3 mb-5">

            <table class="table table-dark table-striped table-hover">

                <thead>
                    <tr>
                        <th>Transaction ID</th>
                        <th>Transaction Date</th>
                        <th>Payment Method</th>
                        <th>Total Value</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var t in Customer.Transactions)
                    {
                        <tr>
                            <td>@t.Id</td>
                            <td>@t.Date</td>
                            <td>@t.PaymentMethod</td>
                            <td>@t.TotalValue</td>
                        </tr>
                    }
                </tbody>

            </table>

        </div>
    }

}


@code {

    [Parameter] public int? Id { get; set; }

    CustomerDetailsDto? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = await Http.GetFromJsonAsync<CustomerDetailsDto>($"customer/details/{Id}");

    }

    private void Cancel()
    {
        navigationManager.NavigateTo("customers");
    }

    private void Edit()
    {
        if (Customer != null)
        {
            navigationManager.NavigateTo($"customer/edit/{Customer.Id}");
        }

    }

}