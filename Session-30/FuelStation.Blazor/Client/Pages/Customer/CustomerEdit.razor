@using FuelStation.Blazor.Shared.DTOs.Customer

@page "/customer/edit/{Id:int?}"

@inject HttpClient Http
@inject NavigationManager navigationManager

<h3>Customer Edit</h3>


@if (Entity == null)
{
    <p>loading</p>
}
else
{
    @if (Id == null)
    {
        <PageTitle>New Customer - Fuel Station</PageTitle>
        <h1 class="mb-5">New Customer</h1>
    }
    else
    {
        <PageTitle>Edit Customer - Fuel Station</PageTitle>
        <h1 class="mb-5">Edit Customer</h1>
    }

    <EditForm Model="Entity" OnValidSubmit="Save">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">

            <div class="col-md-6 mb-3">
                <label class="form-label">Name</label>
                <input class="form-control" type="text" placeholder="Enter customer's name" @bind=@Entity.Name />
            </div>

            <div class="col-md-6 mb-3">
                <label class="form-label">Surname</label>
                <input class="form-control" type="text" placeholder="Enter customer's surname" @bind=@Entity.Surname />
            </div>

            <div class="col-md-6 mb-3">
                <label class="form-label">Card Number</label>
                <input class="form-control" type="text" @bind=@Entity.CardNumber />
            </div>

        </div>

        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-success" type="submit">Save</button>
                <button class="btn btn-warning" @onclick="Cancel">Cancel</button>
            </div>
        </div>

    </EditForm>
}


@code {

    [Parameter] public int? Id { get; set; }

    CustomerEditDto? Entity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Entity = new();
        }
        else
        {
            Entity = await Http.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
        }
    }

    private void Cancel()
    {
        navigationManager.NavigateTo("customer");
    }

    private async Task Save()
    {
        HttpResponseMessage? response = null;

        if (Id == null)
        {
            response = await Http.PostAsJsonAsync("customer", Entity);
        }
        else
        {
            response = await Http.PutAsJsonAsync("customer", Entity);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customer");
    }

}

