@using FuelStation.Blazor.Shared.DTOs.Employee
@using FuelStation.Blazor.Shared.Services

@page "/employee/details/{Id:int?}"

@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ILoginService loginService

@if (Employee == null)
{
    <Spinner />
}
else if (loginService.Role == "Manager")
{
    <PageTitle>Employee: @Employee.Name @Employee.Surname - Fuel Station</PageTitle>
    <h2 class="mb-5">Details for employee: @Employee.Name @Employee.Surname</h2>

    <div class="row mb-5">
        <div class="col-md-6">
            <ul class="list-group">
                <li class="list-group-item list-group-item-dark"><strong>Employee ID:</strong> @Employee.Id</li>
                <li class="list-group-item list-group-item-dark"><strong>Hire date start:</strong> @Employee.HireDateStart</li>
                <li class="list-group-item list-group-item-dark"><strong>Hire date end:</strong> @Employee.HireDateEnd</li>
                <li class="list-group-item list-group-item-dark"><strong>Sallary per month:</strong> @Employee.SallaryPerMonth</li>
                <li class="list-group-item list-group-item-dark"><strong>Employee type:</strong> @Employee.EmployeeType</li>
            </ul>
        </div>
    </div>

    <div class="btn-group mb-5" role="group" aria-label="Actions">
        <button class="btn btn-secondary" @onclick="Cancel">Back</button>
        <button class="btn btn-primary" @onclick="Edit">Edit Employee</button>
    </div>

    @if (Employee.Transactions.Any())
    {
        <h3 class="mb-3">Transactions</h3>

        <div class="table-responsive p-3 mb-5">

            <table class="table table-dark table-striped table-hover">

                <thead>
                    <tr>
                        <th>Transaction ID</th>
                        <th>Transaction Date</th>
                        <th>Payment Method</th>
                        <th>Total Value</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var t in Employee.Transactions)
                    {
                        <tr>
                            <td>@t.Id</td>
                            <td>@t.Date</td>
                            <td>@t.PaymentMethod</td>
                            <td>@t.TotalValue</td>
                        </tr>
                    }
                </tbody>

            </table>

        </div>
    }

}
else
{
    <PageTitle>Access Denied - Fuel Station</PageTitle>
    <AccessDenied />
}

@code {

    [Parameter] public int? Id { get; set; }

    EmployeeDetailsDto? Employee { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employee = await Http.GetFromJsonAsync<EmployeeDetailsDto>($"employee/details/{Id}");
    }

    private void Cancel()
    {
        navigationManager.NavigateTo("employees");
    }

    private void Edit()
    {
        if (Employee != null)
        {
            navigationManager.NavigateTo($"employee/edit/{Employee.Id}");
        }
    }

}